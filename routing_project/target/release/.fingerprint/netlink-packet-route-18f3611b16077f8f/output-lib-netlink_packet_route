{"$message_type":"diagnostic","message":"cannot find value `AF_AX25` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/lennygonzales/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/netlink-packet-route-0.13.0/src/rtnl/constants.rs","byte_start":9064,"byte_end":9071,"line_start":237,"line_end":237,"column_start":32,"column_end":39,"is_primary":true,"text":[{"text":"pub const AF_AX25: u16 = libc::AF_AX25 as u16;","highlight_start":32,"highlight_end":39}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider importing this constant through its public re-export","code":null,"level":"help","spans":[{"file_name":"/Users/lennygonzales/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/netlink-packet-route-0.13.0/src/rtnl/constants.rs","byte_start":33,"byte_end":33,"line_start":3,"line_end":3,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"pub use netlink_packet_core::constants::*;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use crate::AF_AX25;\n","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null},{"message":"if you import `AF_AX25`, refer to it directly","code":null,"level":"help","spans":[{"file_name":"/Users/lennygonzales/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/netlink-packet-route-0.13.0/src/rtnl/constants.rs","byte_start":9058,"byte_end":9064,"line_start":237,"line_end":237,"column_start":26,"column_end":32,"is_primary":true,"text":[{"text":"pub const AF_AX25: u16 = libc::AF_AX25 as u16;","highlight_start":26,"highlight_end":32}],"label":null,"suggested_replacement":"","suggestion_applicability":"Unspecified","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `AF_AX25` in crate `libc`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/lennygonzales/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/netlink-packet-route-0.13.0/src/rtnl/constants.rs:237:32\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m237\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const AF_AX25: u16 = libc::AF_AX25 as u16;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: consider importing this constant through its public re-export\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[38;5;10m+ use crate::AF_AX25;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: if you import `AF_AX25`, refer to it directly\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m237\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0mpub const AF_AX25: u16 = \u001b[0m\u001b[0m\u001b[38;5;9mlibc::\u001b[0m\u001b[0mAF_AX25 as u16;\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m237\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0mpub const AF_AX25: u16 = AF_AX25 as u16;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"cannot find value `AF_NETROM` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/lennygonzales/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.172/src/unix/bsd/apple/mod.rs","byte_start":151128,"byte_end":151152,"line_start":4245,"line_end":4245,"column_start":1,"column_end":25,"is_primary":false,"text":[{"text":"pub const AF_NATM: c_int = 31;","highlight_start":1,"highlight_end":25}],"label":"similarly named constant `AF_NATM` defined here","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/lennygonzales/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/netlink-packet-route-0.13.0/src/rtnl/constants.rs","byte_start":9215,"byte_end":9224,"line_start":240,"line_end":240,"column_start":34,"column_end":43,"is_primary":true,"text":[{"text":"pub const AF_NETROM: u16 = libc::AF_NETROM as u16;","highlight_start":34,"highlight_end":43}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"a constant with a similar name exists","code":null,"level":"help","spans":[{"file_name":"/Users/lennygonzales/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/netlink-packet-route-0.13.0/src/rtnl/constants.rs","byte_start":9215,"byte_end":9224,"line_start":240,"line_end":240,"column_start":34,"column_end":43,"is_primary":true,"text":[{"text":"pub const AF_NETROM: u16 = libc::AF_NETROM as u16;","highlight_start":34,"highlight_end":43}],"label":null,"suggested_replacement":"AF_NATM","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null},{"message":"consider importing this constant through its public re-export","code":null,"level":"help","spans":[{"file_name":"/Users/lennygonzales/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/netlink-packet-route-0.13.0/src/rtnl/constants.rs","byte_start":33,"byte_end":33,"line_start":3,"line_end":3,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"pub use netlink_packet_core::constants::*;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use crate::AF_NETROM;\n","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null},{"message":"if you import `AF_NETROM`, refer to it directly","code":null,"level":"help","spans":[{"file_name":"/Users/lennygonzales/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/netlink-packet-route-0.13.0/src/rtnl/constants.rs","byte_start":9209,"byte_end":9215,"line_start":240,"line_end":240,"column_start":28,"column_end":34,"is_primary":true,"text":[{"text":"pub const AF_NETROM: u16 = libc::AF_NETROM as u16;","highlight_start":28,"highlight_end":34}],"label":null,"suggested_replacement":"","suggestion_applicability":"Unspecified","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `AF_NETROM` in crate `libc`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/lennygonzales/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/netlink-packet-route-0.13.0/src/rtnl/constants.rs:240:34\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m240\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const AF_NETROM: u16 = libc::AF_NETROM as u16;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/lennygonzales/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.172/src/unix/bsd/apple/mod.rs:4245:1\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m4245\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const AF_NATM: c_int = 31;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12msimilarly named constant `AF_NATM` defined here\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: a constant with a similar name exists\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m240\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0mpub const AF_NETROM: u16 = libc::\u001b[0m\u001b[0m\u001b[38;5;9mAF_NETROM\u001b[0m\u001b[0m as u16;\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m240\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0mpub const AF_NETROM: u16 = libc::\u001b[0m\u001b[0m\u001b[38;5;10mAF_NATM\u001b[0m\u001b[0m as u16;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: consider importing this constant through its public re-export\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[38;5;10m+ use crate::AF_NETROM;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: if you import `AF_NETROM`, refer to it directly\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m240\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0mpub const AF_NETROM: u16 = \u001b[0m\u001b[0m\u001b[38;5;9mlibc::\u001b[0m\u001b[0mAF_NETROM as u16;\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m240\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0mpub const AF_NETROM: u16 = AF_NETROM as u16;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"cannot find value `AF_BRIDGE` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/lennygonzales/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/netlink-packet-route-0.13.0/src/rtnl/constants.rs","byte_start":9266,"byte_end":9275,"line_start":241,"line_end":241,"column_start":34,"column_end":43,"is_primary":true,"text":[{"text":"pub const AF_BRIDGE: u16 = libc::AF_BRIDGE as u16;","highlight_start":34,"highlight_end":43}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider importing this constant through its public re-export","code":null,"level":"help","spans":[{"file_name":"/Users/lennygonzales/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/netlink-packet-route-0.13.0/src/rtnl/constants.rs","byte_start":33,"byte_end":33,"line_start":3,"line_end":3,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"pub use netlink_packet_core::constants::*;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use crate::AF_BRIDGE;\n","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null},{"message":"if you import `AF_BRIDGE`, refer to it directly","code":null,"level":"help","spans":[{"file_name":"/Users/lennygonzales/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/netlink-packet-route-0.13.0/src/rtnl/constants.rs","byte_start":9260,"byte_end":9266,"line_start":241,"line_end":241,"column_start":28,"column_end":34,"is_primary":true,"text":[{"text":"pub const AF_BRIDGE: u16 = libc::AF_BRIDGE as u16;","highlight_start":28,"highlight_end":34}],"label":null,"suggested_replacement":"","suggestion_applicability":"Unspecified","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `AF_BRIDGE` in crate `libc`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/lennygonzales/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/netlink-packet-route-0.13.0/src/rtnl/constants.rs:241:34\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m241\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const AF_BRIDGE: u16 = libc::AF_BRIDGE as u16;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: consider importing this constant through its public re-export\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[38;5;10m+ use crate::AF_BRIDGE;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: if you import `AF_BRIDGE`, refer to it directly\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m241\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0mpub const AF_BRIDGE: u16 = \u001b[0m\u001b[0m\u001b[38;5;9mlibc::\u001b[0m\u001b[0mAF_BRIDGE as u16;\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m241\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0mpub const AF_BRIDGE: u16 = AF_BRIDGE as u16;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"cannot find value `AF_ATMPVC` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/lennygonzales/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/netlink-packet-route-0.13.0/src/rtnl/constants.rs","byte_start":9317,"byte_end":9326,"line_start":242,"line_end":242,"column_start":34,"column_end":43,"is_primary":true,"text":[{"text":"pub const AF_ATMPVC: u16 = libc::AF_ATMPVC as u16;","highlight_start":34,"highlight_end":43}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider importing this constant through its public re-export","code":null,"level":"help","spans":[{"file_name":"/Users/lennygonzales/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/netlink-packet-route-0.13.0/src/rtnl/constants.rs","byte_start":33,"byte_end":33,"line_start":3,"line_end":3,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"pub use netlink_packet_core::constants::*;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use crate::AF_ATMPVC;\n","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null},{"message":"if you import `AF_ATMPVC`, refer to it directly","code":null,"level":"help","spans":[{"file_name":"/Users/lennygonzales/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/netlink-packet-route-0.13.0/src/rtnl/constants.rs","byte_start":9311,"byte_end":9317,"line_start":242,"line_end":242,"column_start":28,"column_end":34,"is_primary":true,"text":[{"text":"pub const AF_ATMPVC: u16 = libc::AF_ATMPVC as u16;","highlight_start":28,"highlight_end":34}],"label":null,"suggested_replacement":"","suggestion_applicability":"Unspecified","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `AF_ATMPVC` in crate `libc`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/lennygonzales/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/netlink-packet-route-0.13.0/src/rtnl/constants.rs:242:34\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m242\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const AF_ATMPVC: u16 = libc::AF_ATMPVC as u16;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: consider importing this constant through its public re-export\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[38;5;10m+ use crate::AF_ATMPVC;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: if you import `AF_ATMPVC`, refer to it directly\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m242\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0mpub const AF_ATMPVC: u16 = \u001b[0m\u001b[0m\u001b[38;5;9mlibc::\u001b[0m\u001b[0mAF_ATMPVC as u16;\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m242\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0mpub const AF_ATMPVC: u16 = AF_ATMPVC as u16;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"cannot find value `AF_X25` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/lennygonzales/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/netlink-packet-route-0.13.0/src/rtnl/constants.rs","byte_start":9365,"byte_end":9371,"line_start":243,"line_end":243,"column_start":31,"column_end":37,"is_primary":true,"text":[{"text":"pub const AF_X25: u16 = libc::AF_X25 as u16;","highlight_start":31,"highlight_end":37}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider importing this constant through its public re-export","code":null,"level":"help","spans":[{"file_name":"/Users/lennygonzales/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/netlink-packet-route-0.13.0/src/rtnl/constants.rs","byte_start":33,"byte_end":33,"line_start":3,"line_end":3,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"pub use netlink_packet_core::constants::*;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use crate::AF_X25;\n","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null},{"message":"if you import `AF_X25`, refer to it directly","code":null,"level":"help","spans":[{"file_name":"/Users/lennygonzales/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/netlink-packet-route-0.13.0/src/rtnl/constants.rs","byte_start":9359,"byte_end":9365,"line_start":243,"line_end":243,"column_start":25,"column_end":31,"is_primary":true,"text":[{"text":"pub const AF_X25: u16 = libc::AF_X25 as u16;","highlight_start":25,"highlight_end":31}],"label":null,"suggested_replacement":"","suggestion_applicability":"Unspecified","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `AF_X25` in crate `libc`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/lennygonzales/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/netlink-packet-route-0.13.0/src/rtnl/constants.rs:243:31\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m243\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const AF_X25: u16 = libc::AF_X25 as u16;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                               \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: consider importing this constant through its public re-export\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[38;5;10m+ use crate::AF_X25;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: if you import `AF_X25`, refer to it directly\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m243\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0mpub const AF_X25: u16 = \u001b[0m\u001b[0m\u001b[38;5;9mlibc::\u001b[0m\u001b[0mAF_X25 as u16;\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m243\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0mpub const AF_X25: u16 = AF_X25 as u16;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"cannot find value `AF_ROSE` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/lennygonzales/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.172/src/unix/bsd/apple/mod.rs","byte_start":150344,"byte_end":150367,"line_start":4221,"line_end":4221,"column_start":1,"column_end":24,"is_primary":false,"text":[{"text":"pub const AF_OSI: c_int = AF_ISO;","highlight_start":1,"highlight_end":24}],"label":"similarly named constant `AF_OSI` defined here","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/lennygonzales/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/netlink-packet-route-0.13.0/src/rtnl/constants.rs","byte_start":9460,"byte_end":9467,"line_start":245,"line_end":245,"column_start":32,"column_end":39,"is_primary":true,"text":[{"text":"pub const AF_ROSE: u16 = libc::AF_ROSE as u16;","highlight_start":32,"highlight_end":39}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"a constant with a similar name exists","code":null,"level":"help","spans":[{"file_name":"/Users/lennygonzales/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/netlink-packet-route-0.13.0/src/rtnl/constants.rs","byte_start":9460,"byte_end":9467,"line_start":245,"line_end":245,"column_start":32,"column_end":39,"is_primary":true,"text":[{"text":"pub const AF_ROSE: u16 = libc::AF_ROSE as u16;","highlight_start":32,"highlight_end":39}],"label":null,"suggested_replacement":"AF_OSI","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null},{"message":"consider importing this constant through its public re-export","code":null,"level":"help","spans":[{"file_name":"/Users/lennygonzales/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/netlink-packet-route-0.13.0/src/rtnl/constants.rs","byte_start":33,"byte_end":33,"line_start":3,"line_end":3,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"pub use netlink_packet_core::constants::*;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use crate::AF_ROSE;\n","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null},{"message":"if you import `AF_ROSE`, refer to it directly","code":null,"level":"help","spans":[{"file_name":"/Users/lennygonzales/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/netlink-packet-route-0.13.0/src/rtnl/constants.rs","byte_start":9454,"byte_end":9460,"line_start":245,"line_end":245,"column_start":26,"column_end":32,"is_primary":true,"text":[{"text":"pub const AF_ROSE: u16 = libc::AF_ROSE as u16;","highlight_start":26,"highlight_end":32}],"label":null,"suggested_replacement":"","suggestion_applicability":"Unspecified","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `AF_ROSE` in crate `libc`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/lennygonzales/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/netlink-packet-route-0.13.0/src/rtnl/constants.rs:245:32\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m245\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const AF_ROSE: u16 = libc::AF_ROSE as u16;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/lennygonzales/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.172/src/unix/bsd/apple/mod.rs:4221:1\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m4221\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const AF_OSI: c_int = AF_ISO;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-----------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12msimilarly named constant `AF_OSI` defined here\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: a constant with a similar name exists\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m245\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0mpub const AF_ROSE: u16 = libc::\u001b[0m\u001b[0m\u001b[38;5;9mAF_ROSE\u001b[0m\u001b[0m as u16;\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m245\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0mpub const AF_ROSE: u16 = libc::\u001b[0m\u001b[0m\u001b[38;5;10mAF_OSI\u001b[0m\u001b[0m as u16;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: consider importing this constant through its public re-export\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[38;5;10m+ use crate::AF_ROSE;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: if you import `AF_ROSE`, refer to it directly\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m245\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0mpub const AF_ROSE: u16 = \u001b[0m\u001b[0m\u001b[38;5;9mlibc::\u001b[0m\u001b[0mAF_ROSE as u16;\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m245\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0mpub const AF_ROSE: u16 = AF_ROSE as u16;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"cannot find value `AF_NETBEUI` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/lennygonzales/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.172/src/unix/bsd/apple/mod.rs","byte_start":151192,"byte_end":151219,"line_start":4247,"line_end":4247,"column_start":1,"column_end":28,"is_primary":false,"text":[{"text":"pub const AF_NETBIOS: c_int = 33;","highlight_start":1,"highlight_end":28}],"label":"similarly named constant `AF_NETBIOS` defined here","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/lennygonzales/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/netlink-packet-route-0.13.0/src/rtnl/constants.rs","byte_start":9561,"byte_end":9571,"line_start":247,"line_end":247,"column_start":35,"column_end":45,"is_primary":true,"text":[{"text":"pub const AF_NETBEUI: u16 = libc::AF_NETBEUI as u16;","highlight_start":35,"highlight_end":45}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"a constant with a similar name exists","code":null,"level":"help","spans":[{"file_name":"/Users/lennygonzales/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/netlink-packet-route-0.13.0/src/rtnl/constants.rs","byte_start":9561,"byte_end":9571,"line_start":247,"line_end":247,"column_start":35,"column_end":45,"is_primary":true,"text":[{"text":"pub const AF_NETBEUI: u16 = libc::AF_NETBEUI as u16;","highlight_start":35,"highlight_end":45}],"label":null,"suggested_replacement":"AF_NETBIOS","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null},{"message":"consider importing this constant through its public re-export","code":null,"level":"help","spans":[{"file_name":"/Users/lennygonzales/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/netlink-packet-route-0.13.0/src/rtnl/constants.rs","byte_start":33,"byte_end":33,"line_start":3,"line_end":3,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"pub use netlink_packet_core::constants::*;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use crate::AF_NETBEUI;\n","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null},{"message":"if you import `AF_NETBEUI`, refer to it directly","code":null,"level":"help","spans":[{"file_name":"/Users/lennygonzales/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/netlink-packet-route-0.13.0/src/rtnl/constants.rs","byte_start":9555,"byte_end":9561,"line_start":247,"line_end":247,"column_start":29,"column_end":35,"is_primary":true,"text":[{"text":"pub const AF_NETBEUI: u16 = libc::AF_NETBEUI as u16;","highlight_start":29,"highlight_end":35}],"label":null,"suggested_replacement":"","suggestion_applicability":"Unspecified","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `AF_NETBEUI` in crate `libc`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/lennygonzales/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/netlink-packet-route-0.13.0/src/rtnl/constants.rs:247:35\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m247\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const AF_NETBEUI: u16 = libc::AF_NETBEUI as u16;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/lennygonzales/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.172/src/unix/bsd/apple/mod.rs:4247:1\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m4247\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const AF_NETBIOS: c_int = 33;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m---------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12msimilarly named constant `AF_NETBIOS` defined here\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: a constant with a similar name exists\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m247\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0mpub const AF_NETBEUI: u16 = libc::\u001b[0m\u001b[0m\u001b[38;5;9mAF_NETBEUI\u001b[0m\u001b[0m as u16;\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m247\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0mpub const AF_NETBEUI: u16 = libc::\u001b[0m\u001b[0m\u001b[38;5;10mAF_NETBIOS\u001b[0m\u001b[0m as u16;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: consider importing this constant through its public re-export\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[38;5;10m+ use crate::AF_NETBEUI;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: if you import `AF_NETBEUI`, refer to it directly\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m247\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0mpub const AF_NETBEUI: u16 = \u001b[0m\u001b[0m\u001b[38;5;9mlibc::\u001b[0m\u001b[0mAF_NETBEUI as u16;\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m247\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0mpub const AF_NETBEUI: u16 = AF_NETBEUI as u16;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"cannot find value `AF_SECURITY` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/lennygonzales/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/netlink-packet-route-0.13.0/src/rtnl/constants.rs","byte_start":9615,"byte_end":9626,"line_start":248,"line_end":248,"column_start":36,"column_end":47,"is_primary":true,"text":[{"text":"pub const AF_SECURITY: u16 = libc::AF_SECURITY as u16;","highlight_start":36,"highlight_end":47}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider importing this constant through its public re-export","code":null,"level":"help","spans":[{"file_name":"/Users/lennygonzales/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/netlink-packet-route-0.13.0/src/rtnl/constants.rs","byte_start":33,"byte_end":33,"line_start":3,"line_end":3,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"pub use netlink_packet_core::constants::*;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use crate::AF_SECURITY;\n","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null},{"message":"if you import `AF_SECURITY`, refer to it directly","code":null,"level":"help","spans":[{"file_name":"/Users/lennygonzales/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/netlink-packet-route-0.13.0/src/rtnl/constants.rs","byte_start":9609,"byte_end":9615,"line_start":248,"line_end":248,"column_start":30,"column_end":36,"is_primary":true,"text":[{"text":"pub const AF_SECURITY: u16 = libc::AF_SECURITY as u16;","highlight_start":30,"highlight_end":36}],"label":null,"suggested_replacement":"","suggestion_applicability":"Unspecified","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `AF_SECURITY` in crate `libc`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/lennygonzales/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/netlink-packet-route-0.13.0/src/rtnl/constants.rs:248:36\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m248\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const AF_SECURITY: u16 = libc::AF_SECURITY as u16;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: consider importing this constant through its public re-export\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[38;5;10m+ use crate::AF_SECURITY;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: if you import `AF_SECURITY`, refer to it directly\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m248\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0mpub const AF_SECURITY: u16 = \u001b[0m\u001b[0m\u001b[38;5;9mlibc::\u001b[0m\u001b[0mAF_SECURITY as u16;\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m248\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0mpub const AF_SECURITY: u16 = AF_SECURITY as u16;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"cannot find value `AF_KEY` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/lennygonzales/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.172/src/unix/bsd/apple/mod.rs","byte_start":152630,"byte_end":152653,"line_start":4288,"line_end":4288,"column_start":1,"column_end":24,"is_primary":false,"text":[{"text":"pub const PF_KEY: c_int = pseudo_AF_KEY;","highlight_start":1,"highlight_end":24}],"label":"similarly named constant `PF_KEY` defined here","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/lennygonzales/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/netlink-packet-route-0.13.0/src/rtnl/constants.rs","byte_start":9665,"byte_end":9671,"line_start":249,"line_end":249,"column_start":31,"column_end":37,"is_primary":true,"text":[{"text":"pub const AF_KEY: u16 = libc::AF_KEY as u16;","highlight_start":31,"highlight_end":37}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"a constant with a similar name exists","code":null,"level":"help","spans":[{"file_name":"/Users/lennygonzales/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/netlink-packet-route-0.13.0/src/rtnl/constants.rs","byte_start":9665,"byte_end":9671,"line_start":249,"line_end":249,"column_start":31,"column_end":37,"is_primary":true,"text":[{"text":"pub const AF_KEY: u16 = libc::AF_KEY as u16;","highlight_start":31,"highlight_end":37}],"label":null,"suggested_replacement":"PF_KEY","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null},{"message":"consider importing this constant through its public re-export","code":null,"level":"help","spans":[{"file_name":"/Users/lennygonzales/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/netlink-packet-route-0.13.0/src/rtnl/constants.rs","byte_start":33,"byte_end":33,"line_start":3,"line_end":3,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"pub use netlink_packet_core::constants::*;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use crate::AF_KEY;\n","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null},{"message":"if you import `AF_KEY`, refer to it directly","code":null,"level":"help","spans":[{"file_name":"/Users/lennygonzales/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/netlink-packet-route-0.13.0/src/rtnl/constants.rs","byte_start":9659,"byte_end":9665,"line_start":249,"line_end":249,"column_start":25,"column_end":31,"is_primary":true,"text":[{"text":"pub const AF_KEY: u16 = libc::AF_KEY as u16;","highlight_start":25,"highlight_end":31}],"label":null,"suggested_replacement":"","suggestion_applicability":"Unspecified","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `AF_KEY` in crate `libc`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/lennygonzales/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/netlink-packet-route-0.13.0/src/rtnl/constants.rs:249:31\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m249\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const AF_KEY: u16 = libc::AF_KEY as u16;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                               \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/lennygonzales/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.172/src/unix/bsd/apple/mod.rs:4288:1\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m4288\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const PF_KEY: c_int = pseudo_AF_KEY;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-----------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12msimilarly named constant `PF_KEY` defined here\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: a constant with a similar name exists\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m249\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0mpub const AF_KEY: u16 = libc::\u001b[0m\u001b[0m\u001b[38;5;9mAF_KEY\u001b[0m\u001b[0m as u16;\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m249\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0mpub const AF_KEY: u16 = libc::\u001b[0m\u001b[0m\u001b[38;5;10mPF_KEY\u001b[0m\u001b[0m as u16;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: consider importing this constant through its public re-export\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[38;5;10m+ use crate::AF_KEY;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: if you import `AF_KEY`, refer to it directly\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m249\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0mpub const AF_KEY: u16 = \u001b[0m\u001b[0m\u001b[38;5;9mlibc::\u001b[0m\u001b[0mAF_KEY as u16;\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m249\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0mpub const AF_KEY: u16 = AF_KEY as u16;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"cannot find value `AF_NETLINK` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/lennygonzales/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.172/src/unix/bsd/apple/mod.rs","byte_start":150596,"byte_end":150622,"line_start":4229,"line_end":4229,"column_start":1,"column_end":27,"is_primary":false,"text":[{"text":"pub const AF_HYLINK: c_int = 15;","highlight_start":1,"highlight_end":27}],"label":"similarly named constant `AF_HYLINK` defined here","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/lennygonzales/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/netlink-packet-route-0.13.0/src/rtnl/constants.rs","byte_start":9714,"byte_end":9724,"line_start":250,"line_end":250,"column_start":35,"column_end":45,"is_primary":true,"text":[{"text":"pub const AF_NETLINK: u16 = libc::AF_NETLINK as u16;","highlight_start":35,"highlight_end":45}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"a constant with a similar name exists","code":null,"level":"help","spans":[{"file_name":"/Users/lennygonzales/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/netlink-packet-route-0.13.0/src/rtnl/constants.rs","byte_start":9714,"byte_end":9724,"line_start":250,"line_end":250,"column_start":35,"column_end":45,"is_primary":true,"text":[{"text":"pub const AF_NETLINK: u16 = libc::AF_NETLINK as u16;","highlight_start":35,"highlight_end":45}],"label":null,"suggested_replacement":"AF_HYLINK","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null},{"message":"consider importing this constant through its public re-export","code":null,"level":"help","spans":[{"file_name":"/Users/lennygonzales/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/netlink-packet-route-0.13.0/src/rtnl/constants.rs","byte_start":33,"byte_end":33,"line_start":3,"line_end":3,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"pub use netlink_packet_core::constants::*;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use crate::AF_NETLINK;\n","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null},{"message":"if you import `AF_NETLINK`, refer to it directly","code":null,"level":"help","spans":[{"file_name":"/Users/lennygonzales/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/netlink-packet-route-0.13.0/src/rtnl/constants.rs","byte_start":9708,"byte_end":9714,"line_start":250,"line_end":250,"column_start":29,"column_end":35,"is_primary":true,"text":[{"text":"pub const AF_NETLINK: u16 = libc::AF_NETLINK as u16;","highlight_start":29,"highlight_end":35}],"label":null,"suggested_replacement":"","suggestion_applicability":"Unspecified","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `AF_NETLINK` in crate `libc`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/lennygonzales/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/netlink-packet-route-0.13.0/src/rtnl/constants.rs:250:35\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m250\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const AF_NETLINK: u16 = libc::AF_NETLINK as u16;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/lennygonzales/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.172/src/unix/bsd/apple/mod.rs:4229:1\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m4229\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const AF_HYLINK: c_int = 15;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12msimilarly named constant `AF_HYLINK` defined here\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: a constant with a similar name exists\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m250\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0mpub const AF_NETLINK: u16 = libc::\u001b[0m\u001b[0m\u001b[38;5;9mAF_NETLINK\u001b[0m\u001b[0m as u16;\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m250\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0mpub const AF_NETLINK: u16 = libc::\u001b[0m\u001b[0m\u001b[38;5;10mAF_HYLINK\u001b[0m\u001b[0m as u16;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: consider importing this constant through its public re-export\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[38;5;10m+ use crate::AF_NETLINK;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: if you import `AF_NETLINK`, refer to it directly\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m250\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0mpub const AF_NETLINK: u16 = \u001b[0m\u001b[0m\u001b[38;5;9mlibc::\u001b[0m\u001b[0mAF_NETLINK as u16;\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m250\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0mpub const AF_NETLINK: u16 = AF_NETLINK as u16;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"cannot find value `AF_PACKET` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/lennygonzales/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/netlink-packet-route-0.13.0/src/rtnl/constants.rs","byte_start":9818,"byte_end":9827,"line_start":252,"line_end":252,"column_start":34,"column_end":43,"is_primary":true,"text":[{"text":"pub const AF_PACKET: u16 = libc::AF_PACKET as u16;","highlight_start":34,"highlight_end":43}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider importing this constant through its public re-export","code":null,"level":"help","spans":[{"file_name":"/Users/lennygonzales/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/netlink-packet-route-0.13.0/src/rtnl/constants.rs","byte_start":33,"byte_end":33,"line_start":3,"line_end":3,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"pub use netlink_packet_core::constants::*;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use crate::AF_PACKET;\n","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null},{"message":"if you import `AF_PACKET`, refer to it directly","code":null,"level":"help","spans":[{"file_name":"/Users/lennygonzales/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/netlink-packet-route-0.13.0/src/rtnl/constants.rs","byte_start":9812,"byte_end":9818,"line_start":252,"line_end":252,"column_start":28,"column_end":34,"is_primary":true,"text":[{"text":"pub const AF_PACKET: u16 = libc::AF_PACKET as u16;","highlight_start":28,"highlight_end":34}],"label":null,"suggested_replacement":"","suggestion_applicability":"Unspecified","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `AF_PACKET` in crate `libc`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/lennygonzales/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/netlink-packet-route-0.13.0/src/rtnl/constants.rs:252:34\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m252\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const AF_PACKET: u16 = libc::AF_PACKET as u16;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: consider importing this constant through its public re-export\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[38;5;10m+ use crate::AF_PACKET;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: if you import `AF_PACKET`, refer to it directly\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m252\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0mpub const AF_PACKET: u16 = \u001b[0m\u001b[0m\u001b[38;5;9mlibc::\u001b[0m\u001b[0mAF_PACKET as u16;\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m252\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0mpub const AF_PACKET: u16 = AF_PACKET as u16;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"cannot find value `AF_ASH` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/lennygonzales/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.172/src/unix/bsd/apple/mod.rs","byte_start":150315,"byte_end":150338,"line_start":4220,"line_end":4220,"column_start":1,"column_end":24,"is_primary":false,"text":[{"text":"pub const AF_ISO: c_int = 7;","highlight_start":1,"highlight_end":24}],"label":"similarly named constant `AF_ISO` defined here","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/lennygonzales/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/netlink-packet-route-0.13.0/src/rtnl/constants.rs","byte_start":9866,"byte_end":9872,"line_start":253,"line_end":253,"column_start":31,"column_end":37,"is_primary":true,"text":[{"text":"pub const AF_ASH: u16 = libc::AF_ASH as u16;","highlight_start":31,"highlight_end":37}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"a constant with a similar name exists","code":null,"level":"help","spans":[{"file_name":"/Users/lennygonzales/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/netlink-packet-route-0.13.0/src/rtnl/constants.rs","byte_start":9866,"byte_end":9872,"line_start":253,"line_end":253,"column_start":31,"column_end":37,"is_primary":true,"text":[{"text":"pub const AF_ASH: u16 = libc::AF_ASH as u16;","highlight_start":31,"highlight_end":37}],"label":null,"suggested_replacement":"AF_ISO","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null},{"message":"consider importing this constant through its public re-export","code":null,"level":"help","spans":[{"file_name":"/Users/lennygonzales/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/netlink-packet-route-0.13.0/src/rtnl/constants.rs","byte_start":33,"byte_end":33,"line_start":3,"line_end":3,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"pub use netlink_packet_core::constants::*;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use crate::AF_ASH;\n","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null},{"message":"if you import `AF_ASH`, refer to it directly","code":null,"level":"help","spans":[{"file_name":"/Users/lennygonzales/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/netlink-packet-route-0.13.0/src/rtnl/constants.rs","byte_start":9860,"byte_end":9866,"line_start":253,"line_end":253,"column_start":25,"column_end":31,"is_primary":true,"text":[{"text":"pub const AF_ASH: u16 = libc::AF_ASH as u16;","highlight_start":25,"highlight_end":31}],"label":null,"suggested_replacement":"","suggestion_applicability":"Unspecified","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `AF_ASH` in crate `libc`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/lennygonzales/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/netlink-packet-route-0.13.0/src/rtnl/constants.rs:253:31\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m253\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const AF_ASH: u16 = libc::AF_ASH as u16;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                               \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/lennygonzales/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.172/src/unix/bsd/apple/mod.rs:4220:1\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m4220\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const AF_ISO: c_int = 7;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-----------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12msimilarly named constant `AF_ISO` defined here\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: a constant with a similar name exists\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m253\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0mpub const AF_ASH: u16 = libc::\u001b[0m\u001b[0m\u001b[38;5;9mAF_ASH\u001b[0m\u001b[0m as u16;\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m253\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0mpub const AF_ASH: u16 = libc::\u001b[0m\u001b[0m\u001b[38;5;10mAF_ISO\u001b[0m\u001b[0m as u16;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: consider importing this constant through its public re-export\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[38;5;10m+ use crate::AF_ASH;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: if you import `AF_ASH`, refer to it directly\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m253\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0mpub const AF_ASH: u16 = \u001b[0m\u001b[0m\u001b[38;5;9mlibc::\u001b[0m\u001b[0mAF_ASH as u16;\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m253\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0mpub const AF_ASH: u16 = AF_ASH as u16;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"cannot find value `AF_ECONET` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/lennygonzales/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.172/src/unix/bsd/apple/mod.rs","byte_start":150796,"byte_end":150819,"line_start":4235,"line_end":4235,"column_start":1,"column_end":24,"is_primary":false,"text":[{"text":"pub const AF_CNT: c_int = 21;","highlight_start":1,"highlight_end":24}],"label":"similarly named constant `AF_CNT` defined here","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/lennygonzales/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/netlink-packet-route-0.13.0/src/rtnl/constants.rs","byte_start":9914,"byte_end":9923,"line_start":254,"line_end":254,"column_start":34,"column_end":43,"is_primary":true,"text":[{"text":"pub const AF_ECONET: u16 = libc::AF_ECONET as u16;","highlight_start":34,"highlight_end":43}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"a constant with a similar name exists","code":null,"level":"help","spans":[{"file_name":"/Users/lennygonzales/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/netlink-packet-route-0.13.0/src/rtnl/constants.rs","byte_start":9914,"byte_end":9923,"line_start":254,"line_end":254,"column_start":34,"column_end":43,"is_primary":true,"text":[{"text":"pub const AF_ECONET: u16 = libc::AF_ECONET as u16;","highlight_start":34,"highlight_end":43}],"label":null,"suggested_replacement":"AF_CNT","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null},{"message":"consider importing this constant through its public re-export","code":null,"level":"help","spans":[{"file_name":"/Users/lennygonzales/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/netlink-packet-route-0.13.0/src/rtnl/constants.rs","byte_start":33,"byte_end":33,"line_start":3,"line_end":3,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"pub use netlink_packet_core::constants::*;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use crate::AF_ECONET;\n","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null},{"message":"if you import `AF_ECONET`, refer to it directly","code":null,"level":"help","spans":[{"file_name":"/Users/lennygonzales/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/netlink-packet-route-0.13.0/src/rtnl/constants.rs","byte_start":9908,"byte_end":9914,"line_start":254,"line_end":254,"column_start":28,"column_end":34,"is_primary":true,"text":[{"text":"pub const AF_ECONET: u16 = libc::AF_ECONET as u16;","highlight_start":28,"highlight_end":34}],"label":null,"suggested_replacement":"","suggestion_applicability":"Unspecified","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `AF_ECONET` in crate `libc`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/lennygonzales/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/netlink-packet-route-0.13.0/src/rtnl/constants.rs:254:34\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m254\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const AF_ECONET: u16 = libc::AF_ECONET as u16;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/lennygonzales/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.172/src/unix/bsd/apple/mod.rs:4235:1\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m4235\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const AF_CNT: c_int = 21;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-----------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12msimilarly named constant `AF_CNT` defined here\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: a constant with a similar name exists\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m254\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0mpub const AF_ECONET: u16 = libc::\u001b[0m\u001b[0m\u001b[38;5;9mAF_ECONET\u001b[0m\u001b[0m as u16;\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m254\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0mpub const AF_ECONET: u16 = libc::\u001b[0m\u001b[0m\u001b[38;5;10mAF_CNT\u001b[0m\u001b[0m as u16;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: consider importing this constant through its public re-export\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[38;5;10m+ use crate::AF_ECONET;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: if you import `AF_ECONET`, refer to it directly\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m254\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0mpub const AF_ECONET: u16 = \u001b[0m\u001b[0m\u001b[38;5;9mlibc::\u001b[0m\u001b[0mAF_ECONET as u16;\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m254\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0mpub const AF_ECONET: u16 = AF_ECONET as u16;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"cannot find value `AF_ATMSVC` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/lennygonzales/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/netlink-packet-route-0.13.0/src/rtnl/constants.rs","byte_start":9965,"byte_end":9974,"line_start":255,"line_end":255,"column_start":34,"column_end":43,"is_primary":true,"text":[{"text":"pub const AF_ATMSVC: u16 = libc::AF_ATMSVC as u16;","highlight_start":34,"highlight_end":43}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider importing this constant through its public re-export","code":null,"level":"help","spans":[{"file_name":"/Users/lennygonzales/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/netlink-packet-route-0.13.0/src/rtnl/constants.rs","byte_start":33,"byte_end":33,"line_start":3,"line_end":3,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"pub use netlink_packet_core::constants::*;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use crate::AF_ATMSVC;\n","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null},{"message":"if you import `AF_ATMSVC`, refer to it directly","code":null,"level":"help","spans":[{"file_name":"/Users/lennygonzales/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/netlink-packet-route-0.13.0/src/rtnl/constants.rs","byte_start":9959,"byte_end":9965,"line_start":255,"line_end":255,"column_start":28,"column_end":34,"is_primary":true,"text":[{"text":"pub const AF_ATMSVC: u16 = libc::AF_ATMSVC as u16;","highlight_start":28,"highlight_end":34}],"label":null,"suggested_replacement":"","suggestion_applicability":"Unspecified","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `AF_ATMSVC` in crate `libc`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/lennygonzales/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/netlink-packet-route-0.13.0/src/rtnl/constants.rs:255:34\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m255\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const AF_ATMSVC: u16 = libc::AF_ATMSVC as u16;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: consider importing this constant through its public re-export\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[38;5;10m+ use crate::AF_ATMSVC;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: if you import `AF_ATMSVC`, refer to it directly\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m255\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0mpub const AF_ATMSVC: u16 = \u001b[0m\u001b[0m\u001b[38;5;9mlibc::\u001b[0m\u001b[0mAF_ATMSVC as u16;\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m255\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0mpub const AF_ATMSVC: u16 = AF_ATMSVC as u16;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"cannot find value `AF_RDS` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/lennygonzales/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.172/src/unix/bsd/apple/mod.rs","byte_start":150287,"byte_end":150309,"line_start":4219,"line_end":4219,"column_start":1,"column_end":23,"is_primary":false,"text":[{"text":"pub const AF_NS: c_int = 6;","highlight_start":1,"highlight_end":23}],"label":"similarly named constant `AF_NS` defined here","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/lennygonzales/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/netlink-packet-route-0.13.0/src/rtnl/constants.rs","byte_start":10013,"byte_end":10019,"line_start":256,"line_end":256,"column_start":31,"column_end":37,"is_primary":true,"text":[{"text":"pub const AF_RDS: u16 = libc::AF_RDS as u16;","highlight_start":31,"highlight_end":37}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"a constant with a similar name exists","code":null,"level":"help","spans":[{"file_name":"/Users/lennygonzales/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/netlink-packet-route-0.13.0/src/rtnl/constants.rs","byte_start":10013,"byte_end":10019,"line_start":256,"line_end":256,"column_start":31,"column_end":37,"is_primary":true,"text":[{"text":"pub const AF_RDS: u16 = libc::AF_RDS as u16;","highlight_start":31,"highlight_end":37}],"label":null,"suggested_replacement":"AF_NS","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null},{"message":"consider importing this constant through its public re-export","code":null,"level":"help","spans":[{"file_name":"/Users/lennygonzales/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/netlink-packet-route-0.13.0/src/rtnl/constants.rs","byte_start":33,"byte_end":33,"line_start":3,"line_end":3,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"pub use netlink_packet_core::constants::*;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use crate::AF_RDS;\n","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null},{"message":"if you import `AF_RDS`, refer to it directly","code":null,"level":"help","spans":[{"file_name":"/Users/lennygonzales/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/netlink-packet-route-0.13.0/src/rtnl/constants.rs","byte_start":10007,"byte_end":10013,"line_start":256,"line_end":256,"column_start":25,"column_end":31,"is_primary":true,"text":[{"text":"pub const AF_RDS: u16 = libc::AF_RDS as u16;","highlight_start":25,"highlight_end":31}],"label":null,"suggested_replacement":"","suggestion_applicability":"Unspecified","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `AF_RDS` in crate `libc`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/lennygonzales/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/netlink-packet-route-0.13.0/src/rtnl/constants.rs:256:31\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m256\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const AF_RDS: u16 = libc::AF_RDS as u16;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                               \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/lennygonzales/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.172/src/unix/bsd/apple/mod.rs:4219:1\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m4219\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const AF_NS: c_int = 6;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12msimilarly named constant `AF_NS` defined here\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: a constant with a similar name exists\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m256\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0mpub const AF_RDS: u16 = libc::\u001b[0m\u001b[0m\u001b[38;5;9mAF_RDS\u001b[0m\u001b[0m as u16;\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m256\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0mpub const AF_RDS: u16 = libc::\u001b[0m\u001b[0m\u001b[38;5;10mAF_NS\u001b[0m\u001b[0m as u16;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: consider importing this constant through its public re-export\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[38;5;10m+ use crate::AF_RDS;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: if you import `AF_RDS`, refer to it directly\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m256\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0mpub const AF_RDS: u16 = \u001b[0m\u001b[0m\u001b[38;5;9mlibc::\u001b[0m\u001b[0mAF_RDS as u16;\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m256\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0mpub const AF_RDS: u16 = AF_RDS as u16;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"cannot find value `AF_IRDA` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/lennygonzales/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.172/src/unix/bsd/apple/mod.rs","byte_start":150992,"byte_end":151016,"line_start":4241,"line_end":4241,"column_start":1,"column_end":25,"is_primary":false,"text":[{"text":"pub const AF_ISDN: c_int = 28;","highlight_start":1,"highlight_end":25}],"label":"similarly named constant `AF_ISDN` defined here","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/lennygonzales/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/netlink-packet-route-0.13.0/src/rtnl/constants.rs","byte_start":10104,"byte_end":10111,"line_start":258,"line_end":258,"column_start":32,"column_end":39,"is_primary":true,"text":[{"text":"pub const AF_IRDA: u16 = libc::AF_IRDA as u16;","highlight_start":32,"highlight_end":39}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"a constant with a similar name exists","code":null,"level":"help","spans":[{"file_name":"/Users/lennygonzales/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/netlink-packet-route-0.13.0/src/rtnl/constants.rs","byte_start":10104,"byte_end":10111,"line_start":258,"line_end":258,"column_start":32,"column_end":39,"is_primary":true,"text":[{"text":"pub const AF_IRDA: u16 = libc::AF_IRDA as u16;","highlight_start":32,"highlight_end":39}],"label":null,"suggested_replacement":"AF_ISDN","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null},{"message":"consider importing this constant through its public re-export","code":null,"level":"help","spans":[{"file_name":"/Users/lennygonzales/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/netlink-packet-route-0.13.0/src/rtnl/constants.rs","byte_start":33,"byte_end":33,"line_start":3,"line_end":3,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"pub use netlink_packet_core::constants::*;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use crate::AF_IRDA;\n","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null},{"message":"if you import `AF_IRDA`, refer to it directly","code":null,"level":"help","spans":[{"file_name":"/Users/lennygonzales/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/netlink-packet-route-0.13.0/src/rtnl/constants.rs","byte_start":10098,"byte_end":10104,"line_start":258,"line_end":258,"column_start":26,"column_end":32,"is_primary":true,"text":[{"text":"pub const AF_IRDA: u16 = libc::AF_IRDA as u16;","highlight_start":26,"highlight_end":32}],"label":null,"suggested_replacement":"","suggestion_applicability":"Unspecified","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `AF_IRDA` in crate `libc`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/lennygonzales/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/netlink-packet-route-0.13.0/src/rtnl/constants.rs:258:32\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m258\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const AF_IRDA: u16 = libc::AF_IRDA as u16;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/lennygonzales/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.172/src/unix/bsd/apple/mod.rs:4241:1\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m4241\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const AF_ISDN: c_int = 28;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12msimilarly named constant `AF_ISDN` defined here\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: a constant with a similar name exists\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m258\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0mpub const AF_IRDA: u16 = libc::\u001b[0m\u001b[0m\u001b[38;5;9mAF_IRDA\u001b[0m\u001b[0m as u16;\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m258\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0mpub const AF_IRDA: u16 = libc::\u001b[0m\u001b[0m\u001b[38;5;10mAF_ISDN\u001b[0m\u001b[0m as u16;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: consider importing this constant through its public re-export\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[38;5;10m+ use crate::AF_IRDA;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: if you import `AF_IRDA`, refer to it directly\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m258\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0mpub const AF_IRDA: u16 = \u001b[0m\u001b[0m\u001b[38;5;9mlibc::\u001b[0m\u001b[0mAF_IRDA as u16;\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m258\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0mpub const AF_IRDA: u16 = AF_IRDA as u16;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"cannot find value `AF_PPPOX` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/lennygonzales/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.172/src/unix/bsd/apple/mod.rs","byte_start":151226,"byte_end":151249,"line_start":4248,"line_end":4248,"column_start":1,"column_end":24,"is_primary":false,"text":[{"text":"pub const AF_PPP: c_int = 34;","highlight_start":1,"highlight_end":24}],"label":"similarly named constant `AF_PPP` defined here","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/lennygonzales/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/netlink-packet-route-0.13.0/src/rtnl/constants.rs","byte_start":10152,"byte_end":10160,"line_start":259,"line_end":259,"column_start":33,"column_end":41,"is_primary":true,"text":[{"text":"pub const AF_PPPOX: u16 = libc::AF_PPPOX as u16;","highlight_start":33,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"a constant with a similar name exists","code":null,"level":"help","spans":[{"file_name":"/Users/lennygonzales/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/netlink-packet-route-0.13.0/src/rtnl/constants.rs","byte_start":10152,"byte_end":10160,"line_start":259,"line_end":259,"column_start":33,"column_end":41,"is_primary":true,"text":[{"text":"pub const AF_PPPOX: u16 = libc::AF_PPPOX as u16;","highlight_start":33,"highlight_end":41}],"label":null,"suggested_replacement":"AF_PPP","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null},{"message":"consider importing this constant through its public re-export","code":null,"level":"help","spans":[{"file_name":"/Users/lennygonzales/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/netlink-packet-route-0.13.0/src/rtnl/constants.rs","byte_start":33,"byte_end":33,"line_start":3,"line_end":3,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"pub use netlink_packet_core::constants::*;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use crate::AF_PPPOX;\n","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null},{"message":"if you import `AF_PPPOX`, refer to it directly","code":null,"level":"help","spans":[{"file_name":"/Users/lennygonzales/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/netlink-packet-route-0.13.0/src/rtnl/constants.rs","byte_start":10146,"byte_end":10152,"line_start":259,"line_end":259,"column_start":27,"column_end":33,"is_primary":true,"text":[{"text":"pub const AF_PPPOX: u16 = libc::AF_PPPOX as u16;","highlight_start":27,"highlight_end":33}],"label":null,"suggested_replacement":"","suggestion_applicability":"Unspecified","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `AF_PPPOX` in crate `libc`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/lennygonzales/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/netlink-packet-route-0.13.0/src/rtnl/constants.rs:259:33\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m259\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const AF_PPPOX: u16 = libc::AF_PPPOX as u16;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                 \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/lennygonzales/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.172/src/unix/bsd/apple/mod.rs:4248:1\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m4248\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const AF_PPP: c_int = 34;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-----------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12msimilarly named constant `AF_PPP` defined here\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: a constant with a similar name exists\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m259\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0mpub const AF_PPPOX: u16 = libc::\u001b[0m\u001b[0m\u001b[38;5;9mAF_PPPOX\u001b[0m\u001b[0m as u16;\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m259\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0mpub const AF_PPPOX: u16 = libc::\u001b[0m\u001b[0m\u001b[38;5;10mAF_PPP\u001b[0m\u001b[0m as u16;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: consider importing this constant through its public re-export\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[38;5;10m+ use crate::AF_PPPOX;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: if you import `AF_PPPOX`, refer to it directly\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m259\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0mpub const AF_PPPOX: u16 = \u001b[0m\u001b[0m\u001b[38;5;9mlibc::\u001b[0m\u001b[0mAF_PPPOX as u16;\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m259\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0mpub const AF_PPPOX: u16 = AF_PPPOX as u16;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"cannot find value `AF_WANPIPE` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/lennygonzales/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/netlink-packet-route-0.13.0/src/rtnl/constants.rs","byte_start":10203,"byte_end":10213,"line_start":260,"line_end":260,"column_start":35,"column_end":45,"is_primary":true,"text":[{"text":"pub const AF_WANPIPE: u16 = libc::AF_WANPIPE as u16;","highlight_start":35,"highlight_end":45}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider importing this constant through its public re-export","code":null,"level":"help","spans":[{"file_name":"/Users/lennygonzales/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/netlink-packet-route-0.13.0/src/rtnl/constants.rs","byte_start":33,"byte_end":33,"line_start":3,"line_end":3,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"pub use netlink_packet_core::constants::*;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use crate::AF_WANPIPE;\n","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null},{"message":"if you import `AF_WANPIPE`, refer to it directly","code":null,"level":"help","spans":[{"file_name":"/Users/lennygonzales/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/netlink-packet-route-0.13.0/src/rtnl/constants.rs","byte_start":10197,"byte_end":10203,"line_start":260,"line_end":260,"column_start":29,"column_end":35,"is_primary":true,"text":[{"text":"pub const AF_WANPIPE: u16 = libc::AF_WANPIPE as u16;","highlight_start":29,"highlight_end":35}],"label":null,"suggested_replacement":"","suggestion_applicability":"Unspecified","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `AF_WANPIPE` in crate `libc`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/lennygonzales/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/netlink-packet-route-0.13.0/src/rtnl/constants.rs:260:35\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m260\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const AF_WANPIPE: u16 = libc::AF_WANPIPE as u16;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: consider importing this constant through its public re-export\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[38;5;10m+ use crate::AF_WANPIPE;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: if you import `AF_WANPIPE`, refer to it directly\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m260\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0mpub const AF_WANPIPE: u16 = \u001b[0m\u001b[0m\u001b[38;5;9mlibc::\u001b[0m\u001b[0mAF_WANPIPE as u16;\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m260\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0mpub const AF_WANPIPE: u16 = AF_WANPIPE as u16;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"cannot find value `AF_LLC` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/lennygonzales/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.172/src/unix/bsd/apple/mod.rs","byte_start":150536,"byte_end":150559,"line_start":4227,"line_end":4227,"column_start":1,"column_end":24,"is_primary":false,"text":[{"text":"pub const AF_DLI: c_int = 13;","highlight_start":1,"highlight_end":24}],"label":"similarly named constant `AF_DLI` defined here","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/lennygonzales/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/netlink-packet-route-0.13.0/src/rtnl/constants.rs","byte_start":10252,"byte_end":10258,"line_start":261,"line_end":261,"column_start":31,"column_end":37,"is_primary":true,"text":[{"text":"pub const AF_LLC: u16 = libc::AF_LLC as u16;","highlight_start":31,"highlight_end":37}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"a constant with a similar name exists","code":null,"level":"help","spans":[{"file_name":"/Users/lennygonzales/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/netlink-packet-route-0.13.0/src/rtnl/constants.rs","byte_start":10252,"byte_end":10258,"line_start":261,"line_end":261,"column_start":31,"column_end":37,"is_primary":true,"text":[{"text":"pub const AF_LLC: u16 = libc::AF_LLC as u16;","highlight_start":31,"highlight_end":37}],"label":null,"suggested_replacement":"AF_DLI","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null},{"message":"consider importing this constant through its public re-export","code":null,"level":"help","spans":[{"file_name":"/Users/lennygonzales/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/netlink-packet-route-0.13.0/src/rtnl/constants.rs","byte_start":33,"byte_end":33,"line_start":3,"line_end":3,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"pub use netlink_packet_core::constants::*;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use crate::AF_LLC;\n","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null},{"message":"if you import `AF_LLC`, refer to it directly","code":null,"level":"help","spans":[{"file_name":"/Users/lennygonzales/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/netlink-packet-route-0.13.0/src/rtnl/constants.rs","byte_start":10246,"byte_end":10252,"line_start":261,"line_end":261,"column_start":25,"column_end":31,"is_primary":true,"text":[{"text":"pub const AF_LLC: u16 = libc::AF_LLC as u16;","highlight_start":25,"highlight_end":31}],"label":null,"suggested_replacement":"","suggestion_applicability":"Unspecified","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `AF_LLC` in crate `libc`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/lennygonzales/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/netlink-packet-route-0.13.0/src/rtnl/constants.rs:261:31\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m261\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const AF_LLC: u16 = libc::AF_LLC as u16;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                               \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/lennygonzales/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.172/src/unix/bsd/apple/mod.rs:4227:1\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m4227\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const AF_DLI: c_int = 13;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-----------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12msimilarly named constant `AF_DLI` defined here\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: a constant with a similar name exists\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m261\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0mpub const AF_LLC: u16 = libc::\u001b[0m\u001b[0m\u001b[38;5;9mAF_LLC\u001b[0m\u001b[0m as u16;\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m261\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0mpub const AF_LLC: u16 = libc::\u001b[0m\u001b[0m\u001b[38;5;10mAF_DLI\u001b[0m\u001b[0m as u16;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: consider importing this constant through its public re-export\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[38;5;10m+ use crate::AF_LLC;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: if you import `AF_LLC`, refer to it directly\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m261\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0mpub const AF_LLC: u16 = \u001b[0m\u001b[0m\u001b[38;5;9mlibc::\u001b[0m\u001b[0mAF_LLC as u16;\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m261\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0mpub const AF_LLC: u16 = AF_LLC as u16;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"cannot find value `AF_CAN` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/lennygonzales/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.172/src/unix/bsd/apple/mod.rs","byte_start":150796,"byte_end":150819,"line_start":4235,"line_end":4235,"column_start":1,"column_end":24,"is_primary":false,"text":[{"text":"pub const AF_CNT: c_int = 21;","highlight_start":1,"highlight_end":24}],"label":"similarly named constant `AF_CNT` defined here","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/lennygonzales/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/netlink-packet-route-0.13.0/src/rtnl/constants.rs","byte_start":10297,"byte_end":10303,"line_start":262,"line_end":262,"column_start":31,"column_end":37,"is_primary":true,"text":[{"text":"pub const AF_CAN: u16 = libc::AF_CAN as u16;","highlight_start":31,"highlight_end":37}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"a constant with a similar name exists","code":null,"level":"help","spans":[{"file_name":"/Users/lennygonzales/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/netlink-packet-route-0.13.0/src/rtnl/constants.rs","byte_start":10297,"byte_end":10303,"line_start":262,"line_end":262,"column_start":31,"column_end":37,"is_primary":true,"text":[{"text":"pub const AF_CAN: u16 = libc::AF_CAN as u16;","highlight_start":31,"highlight_end":37}],"label":null,"suggested_replacement":"AF_CNT","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null},{"message":"consider importing this constant through its public re-export","code":null,"level":"help","spans":[{"file_name":"/Users/lennygonzales/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/netlink-packet-route-0.13.0/src/rtnl/constants.rs","byte_start":33,"byte_end":33,"line_start":3,"line_end":3,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"pub use netlink_packet_core::constants::*;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use crate::AF_CAN;\n","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null},{"message":"if you import `AF_CAN`, refer to it directly","code":null,"level":"help","spans":[{"file_name":"/Users/lennygonzales/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/netlink-packet-route-0.13.0/src/rtnl/constants.rs","byte_start":10291,"byte_end":10297,"line_start":262,"line_end":262,"column_start":25,"column_end":31,"is_primary":true,"text":[{"text":"pub const AF_CAN: u16 = libc::AF_CAN as u16;","highlight_start":25,"highlight_end":31}],"label":null,"suggested_replacement":"","suggestion_applicability":"Unspecified","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `AF_CAN` in crate `libc`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/lennygonzales/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/netlink-packet-route-0.13.0/src/rtnl/constants.rs:262:31\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m262\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const AF_CAN: u16 = libc::AF_CAN as u16;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                               \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/lennygonzales/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.172/src/unix/bsd/apple/mod.rs:4235:1\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m4235\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const AF_CNT: c_int = 21;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-----------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12msimilarly named constant `AF_CNT` defined here\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: a constant with a similar name exists\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m262\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0mpub const AF_CAN: u16 = libc::\u001b[0m\u001b[0m\u001b[38;5;9mAF_CAN\u001b[0m\u001b[0m as u16;\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m262\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0mpub const AF_CAN: u16 = libc::\u001b[0m\u001b[0m\u001b[38;5;10mAF_CNT\u001b[0m\u001b[0m as u16;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: consider importing this constant through its public re-export\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[38;5;10m+ use crate::AF_CAN;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: if you import `AF_CAN`, refer to it directly\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m262\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0mpub const AF_CAN: u16 = \u001b[0m\u001b[0m\u001b[38;5;9mlibc::\u001b[0m\u001b[0mAF_CAN as u16;\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m262\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0mpub const AF_CAN: u16 = AF_CAN as u16;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"cannot find value `AF_TIPC` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/lennygonzales/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.172/src/unix/bsd/apple/mod.rs","byte_start":150864,"byte_end":150887,"line_start":4237,"line_end":4237,"column_start":1,"column_end":24,"is_primary":false,"text":[{"text":"pub const AF_IPX: c_int = 23;","highlight_start":1,"highlight_end":24}],"label":"similarly named constant `AF_IPX` defined here","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/lennygonzales/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/netlink-packet-route-0.13.0/src/rtnl/constants.rs","byte_start":10343,"byte_end":10350,"line_start":263,"line_end":263,"column_start":32,"column_end":39,"is_primary":true,"text":[{"text":"pub const AF_TIPC: u16 = libc::AF_TIPC as u16;","highlight_start":32,"highlight_end":39}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"a constant with a similar name exists","code":null,"level":"help","spans":[{"file_name":"/Users/lennygonzales/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/netlink-packet-route-0.13.0/src/rtnl/constants.rs","byte_start":10343,"byte_end":10350,"line_start":263,"line_end":263,"column_start":32,"column_end":39,"is_primary":true,"text":[{"text":"pub const AF_TIPC: u16 = libc::AF_TIPC as u16;","highlight_start":32,"highlight_end":39}],"label":null,"suggested_replacement":"AF_IPX","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null},{"message":"consider importing this constant through its public re-export","code":null,"level":"help","spans":[{"file_name":"/Users/lennygonzales/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/netlink-packet-route-0.13.0/src/rtnl/constants.rs","byte_start":33,"byte_end":33,"line_start":3,"line_end":3,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"pub use netlink_packet_core::constants::*;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use crate::AF_TIPC;\n","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null},{"message":"if you import `AF_TIPC`, refer to it directly","code":null,"level":"help","spans":[{"file_name":"/Users/lennygonzales/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/netlink-packet-route-0.13.0/src/rtnl/constants.rs","byte_start":10337,"byte_end":10343,"line_start":263,"line_end":263,"column_start":26,"column_end":32,"is_primary":true,"text":[{"text":"pub const AF_TIPC: u16 = libc::AF_TIPC as u16;","highlight_start":26,"highlight_end":32}],"label":null,"suggested_replacement":"","suggestion_applicability":"Unspecified","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `AF_TIPC` in crate `libc`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/lennygonzales/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/netlink-packet-route-0.13.0/src/rtnl/constants.rs:263:32\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m263\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const AF_TIPC: u16 = libc::AF_TIPC as u16;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/lennygonzales/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.172/src/unix/bsd/apple/mod.rs:4237:1\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m4237\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const AF_IPX: c_int = 23;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-----------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12msimilarly named constant `AF_IPX` defined here\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: a constant with a similar name exists\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m263\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0mpub const AF_TIPC: u16 = libc::\u001b[0m\u001b[0m\u001b[38;5;9mAF_TIPC\u001b[0m\u001b[0m as u16;\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m263\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0mpub const AF_TIPC: u16 = libc::\u001b[0m\u001b[0m\u001b[38;5;10mAF_IPX\u001b[0m\u001b[0m as u16;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: consider importing this constant through its public re-export\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[38;5;10m+ use crate::AF_TIPC;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: if you import `AF_TIPC`, refer to it directly\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m263\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0mpub const AF_TIPC: u16 = \u001b[0m\u001b[0m\u001b[38;5;9mlibc::\u001b[0m\u001b[0mAF_TIPC as u16;\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m263\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0mpub const AF_TIPC: u16 = AF_TIPC as u16;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"cannot find value `AF_BLUETOOTH` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/lennygonzales/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/netlink-packet-route-0.13.0/src/rtnl/constants.rs","byte_start":10395,"byte_end":10407,"line_start":264,"line_end":264,"column_start":37,"column_end":49,"is_primary":true,"text":[{"text":"pub const AF_BLUETOOTH: u16 = libc::AF_BLUETOOTH as u16;","highlight_start":37,"highlight_end":49}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider importing this constant through its public re-export","code":null,"level":"help","spans":[{"file_name":"/Users/lennygonzales/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/netlink-packet-route-0.13.0/src/rtnl/constants.rs","byte_start":33,"byte_end":33,"line_start":3,"line_end":3,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"pub use netlink_packet_core::constants::*;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use crate::AF_BLUETOOTH;\n","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null},{"message":"if you import `AF_BLUETOOTH`, refer to it directly","code":null,"level":"help","spans":[{"file_name":"/Users/lennygonzales/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/netlink-packet-route-0.13.0/src/rtnl/constants.rs","byte_start":10389,"byte_end":10395,"line_start":264,"line_end":264,"column_start":31,"column_end":37,"is_primary":true,"text":[{"text":"pub const AF_BLUETOOTH: u16 = libc::AF_BLUETOOTH as u16;","highlight_start":31,"highlight_end":37}],"label":null,"suggested_replacement":"","suggestion_applicability":"Unspecified","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `AF_BLUETOOTH` in crate `libc`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/lennygonzales/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/netlink-packet-route-0.13.0/src/rtnl/constants.rs:264:37\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m264\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const AF_BLUETOOTH: u16 = libc::AF_BLUETOOTH as u16;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: consider importing this constant through its public re-export\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[38;5;10m+ use crate::AF_BLUETOOTH;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: if you import `AF_BLUETOOTH`, refer to it directly\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m264\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0mpub const AF_BLUETOOTH: u16 = \u001b[0m\u001b[0m\u001b[38;5;9mlibc::\u001b[0m\u001b[0mAF_BLUETOOTH as u16;\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m264\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0mpub const AF_BLUETOOTH: u16 = AF_BLUETOOTH as u16;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"cannot find value `AF_IUCV` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/lennygonzales/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/netlink-packet-route-0.13.0/src/rtnl/constants.rs","byte_start":10447,"byte_end":10454,"line_start":265,"line_end":265,"column_start":32,"column_end":39,"is_primary":true,"text":[{"text":"pub const AF_IUCV: u16 = libc::AF_IUCV as u16;","highlight_start":32,"highlight_end":39}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider importing this constant through its public re-export","code":null,"level":"help","spans":[{"file_name":"/Users/lennygonzales/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/netlink-packet-route-0.13.0/src/rtnl/constants.rs","byte_start":33,"byte_end":33,"line_start":3,"line_end":3,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"pub use netlink_packet_core::constants::*;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use crate::AF_IUCV;\n","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null},{"message":"if you import `AF_IUCV`, refer to it directly","code":null,"level":"help","spans":[{"file_name":"/Users/lennygonzales/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/netlink-packet-route-0.13.0/src/rtnl/constants.rs","byte_start":10441,"byte_end":10447,"line_start":265,"line_end":265,"column_start":26,"column_end":32,"is_primary":true,"text":[{"text":"pub const AF_IUCV: u16 = libc::AF_IUCV as u16;","highlight_start":26,"highlight_end":32}],"label":null,"suggested_replacement":"","suggestion_applicability":"Unspecified","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `AF_IUCV` in crate `libc`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/lennygonzales/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/netlink-packet-route-0.13.0/src/rtnl/constants.rs:265:32\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m265\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const AF_IUCV: u16 = libc::AF_IUCV as u16;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: consider importing this constant through its public re-export\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[38;5;10m+ use crate::AF_IUCV;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: if you import `AF_IUCV`, refer to it directly\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m265\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0mpub const AF_IUCV: u16 = \u001b[0m\u001b[0m\u001b[38;5;9mlibc::\u001b[0m\u001b[0mAF_IUCV as u16;\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m265\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0mpub const AF_IUCV: u16 = AF_IUCV as u16;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"cannot find value `AF_RXRPC` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/lennygonzales/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/netlink-packet-route-0.13.0/src/rtnl/constants.rs","byte_start":10495,"byte_end":10503,"line_start":266,"line_end":266,"column_start":33,"column_end":41,"is_primary":true,"text":[{"text":"pub const AF_RXRPC: u16 = libc::AF_RXRPC as u16;","highlight_start":33,"highlight_end":41}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider importing this constant through its public re-export","code":null,"level":"help","spans":[{"file_name":"/Users/lennygonzales/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/netlink-packet-route-0.13.0/src/rtnl/constants.rs","byte_start":33,"byte_end":33,"line_start":3,"line_end":3,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"pub use netlink_packet_core::constants::*;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use crate::AF_RXRPC;\n","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null},{"message":"if you import `AF_RXRPC`, refer to it directly","code":null,"level":"help","spans":[{"file_name":"/Users/lennygonzales/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/netlink-packet-route-0.13.0/src/rtnl/constants.rs","byte_start":10489,"byte_end":10495,"line_start":266,"line_end":266,"column_start":27,"column_end":33,"is_primary":true,"text":[{"text":"pub const AF_RXRPC: u16 = libc::AF_RXRPC as u16;","highlight_start":27,"highlight_end":33}],"label":null,"suggested_replacement":"","suggestion_applicability":"Unspecified","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `AF_RXRPC` in crate `libc`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/lennygonzales/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/netlink-packet-route-0.13.0/src/rtnl/constants.rs:266:33\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m266\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const AF_RXRPC: u16 = libc::AF_RXRPC as u16;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                 \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: consider importing this constant through its public re-export\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[38;5;10m+ use crate::AF_RXRPC;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: if you import `AF_RXRPC`, refer to it directly\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m266\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0mpub const AF_RXRPC: u16 = \u001b[0m\u001b[0m\u001b[38;5;9mlibc::\u001b[0m\u001b[0mAF_RXRPC as u16;\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m266\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0mpub const AF_RXRPC: u16 = AF_RXRPC as u16;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"cannot find value `AF_PHONET` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/lennygonzales/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.172/src/unix/bsd/apple/mod.rs","byte_start":150164,"byte_end":150188,"line_start":4215,"line_end":4215,"column_start":1,"column_end":25,"is_primary":false,"text":[{"text":"pub const AF_INET: c_int = 2;","highlight_start":1,"highlight_end":25}],"label":"similarly named constant `AF_INET` defined here","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/lennygonzales/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/netlink-packet-route-0.13.0/src/rtnl/constants.rs","byte_start":10592,"byte_end":10601,"line_start":268,"line_end":268,"column_start":34,"column_end":43,"is_primary":true,"text":[{"text":"pub const AF_PHONET: u16 = libc::AF_PHONET as u16;","highlight_start":34,"highlight_end":43}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"a constant with a similar name exists","code":null,"level":"help","spans":[{"file_name":"/Users/lennygonzales/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/netlink-packet-route-0.13.0/src/rtnl/constants.rs","byte_start":10592,"byte_end":10601,"line_start":268,"line_end":268,"column_start":34,"column_end":43,"is_primary":true,"text":[{"text":"pub const AF_PHONET: u16 = libc::AF_PHONET as u16;","highlight_start":34,"highlight_end":43}],"label":null,"suggested_replacement":"AF_INET","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null},{"message":"consider importing this constant through its public re-export","code":null,"level":"help","spans":[{"file_name":"/Users/lennygonzales/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/netlink-packet-route-0.13.0/src/rtnl/constants.rs","byte_start":33,"byte_end":33,"line_start":3,"line_end":3,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"pub use netlink_packet_core::constants::*;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use crate::AF_PHONET;\n","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null},{"message":"if you import `AF_PHONET`, refer to it directly","code":null,"level":"help","spans":[{"file_name":"/Users/lennygonzales/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/netlink-packet-route-0.13.0/src/rtnl/constants.rs","byte_start":10586,"byte_end":10592,"line_start":268,"line_end":268,"column_start":28,"column_end":34,"is_primary":true,"text":[{"text":"pub const AF_PHONET: u16 = libc::AF_PHONET as u16;","highlight_start":28,"highlight_end":34}],"label":null,"suggested_replacement":"","suggestion_applicability":"Unspecified","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `AF_PHONET` in crate `libc`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/lennygonzales/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/netlink-packet-route-0.13.0/src/rtnl/constants.rs:268:34\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m268\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const AF_PHONET: u16 = libc::AF_PHONET as u16;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/lennygonzales/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.172/src/unix/bsd/apple/mod.rs:4215:1\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m4215\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const AF_INET: c_int = 2;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12msimilarly named constant `AF_INET` defined here\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: a constant with a similar name exists\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m268\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0mpub const AF_PHONET: u16 = libc::\u001b[0m\u001b[0m\u001b[38;5;9mAF_PHONET\u001b[0m\u001b[0m as u16;\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m268\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0mpub const AF_PHONET: u16 = libc::\u001b[0m\u001b[0m\u001b[38;5;10mAF_INET\u001b[0m\u001b[0m as u16;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: consider importing this constant through its public re-export\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[38;5;10m+ use crate::AF_PHONET;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: if you import `AF_PHONET`, refer to it directly\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m268\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0mpub const AF_PHONET: u16 = \u001b[0m\u001b[0m\u001b[38;5;9mlibc::\u001b[0m\u001b[0mAF_PHONET as u16;\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m268\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0mpub const AF_PHONET: u16 = AF_PHONET as u16;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"cannot find value `AF_IEEE802154` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/lennygonzales/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.172/src/unix/bsd/apple/mod.rs","byte_start":151298,"byte_end":151327,"line_start":4250,"line_end":4250,"column_start":1,"column_end":30,"is_primary":false,"text":[{"text":"pub const AF_IEEE80211: c_int = 37;","highlight_start":1,"highlight_end":30}],"label":"similarly named constant `AF_IEEE80211` defined here","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/lennygonzales/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/netlink-packet-route-0.13.0/src/rtnl/constants.rs","byte_start":10647,"byte_end":10660,"line_start":269,"line_end":269,"column_start":38,"column_end":51,"is_primary":true,"text":[{"text":"pub const AF_IEEE802154: u16 = libc::AF_IEEE802154 as u16;","highlight_start":38,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"a constant with a similar name exists","code":null,"level":"help","spans":[{"file_name":"/Users/lennygonzales/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/netlink-packet-route-0.13.0/src/rtnl/constants.rs","byte_start":10647,"byte_end":10660,"line_start":269,"line_end":269,"column_start":38,"column_end":51,"is_primary":true,"text":[{"text":"pub const AF_IEEE802154: u16 = libc::AF_IEEE802154 as u16;","highlight_start":38,"highlight_end":51}],"label":null,"suggested_replacement":"AF_IEEE80211","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null},{"message":"consider importing this constant through its public re-export","code":null,"level":"help","spans":[{"file_name":"/Users/lennygonzales/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/netlink-packet-route-0.13.0/src/rtnl/constants.rs","byte_start":33,"byte_end":33,"line_start":3,"line_end":3,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"pub use netlink_packet_core::constants::*;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use crate::AF_IEEE802154;\n","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null},{"message":"if you import `AF_IEEE802154`, refer to it directly","code":null,"level":"help","spans":[{"file_name":"/Users/lennygonzales/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/netlink-packet-route-0.13.0/src/rtnl/constants.rs","byte_start":10641,"byte_end":10647,"line_start":269,"line_end":269,"column_start":32,"column_end":38,"is_primary":true,"text":[{"text":"pub const AF_IEEE802154: u16 = libc::AF_IEEE802154 as u16;","highlight_start":32,"highlight_end":38}],"label":null,"suggested_replacement":"","suggestion_applicability":"Unspecified","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `AF_IEEE802154` in crate `libc`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/lennygonzales/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/netlink-packet-route-0.13.0/src/rtnl/constants.rs:269:38\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m269\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const AF_IEEE802154: u16 = libc::AF_IEEE802154 as u16;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/lennygonzales/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.172/src/unix/bsd/apple/mod.rs:4250:1\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m4250\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const AF_IEEE80211: c_int = 37;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-----------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12msimilarly named constant `AF_IEEE80211` defined here\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: a constant with a similar name exists\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m269\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0mpub const AF_IEEE802154: u16 = libc::\u001b[0m\u001b[0m\u001b[38;5;9mAF_IEEE802154\u001b[0m\u001b[0m as u16;\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m269\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0mpub const AF_IEEE802154: u16 = libc::\u001b[0m\u001b[0m\u001b[38;5;10mAF_IEEE80211\u001b[0m\u001b[0m as u16;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: consider importing this constant through its public re-export\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[38;5;10m+ use crate::AF_IEEE802154;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: if you import `AF_IEEE802154`, refer to it directly\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m269\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0mpub const AF_IEEE802154: u16 = \u001b[0m\u001b[0m\u001b[38;5;9mlibc::\u001b[0m\u001b[0mAF_IEEE802154 as u16;\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m269\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0mpub const AF_IEEE802154: u16 = AF_IEEE802154 as u16;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"cannot find value `AF_CAIF` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/lennygonzales/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.172/src/unix/bsd/apple/mod.rs","byte_start":150765,"byte_end":150789,"line_start":4234,"line_end":4234,"column_start":1,"column_end":25,"is_primary":false,"text":[{"text":"pub const AF_COIP: c_int = 20;","highlight_start":1,"highlight_end":25}],"label":"similarly named constant `AF_COIP` defined here","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/lennygonzales/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/netlink-packet-route-0.13.0/src/rtnl/constants.rs","byte_start":10700,"byte_end":10707,"line_start":270,"line_end":270,"column_start":32,"column_end":39,"is_primary":true,"text":[{"text":"pub const AF_CAIF: u16 = libc::AF_CAIF as u16;","highlight_start":32,"highlight_end":39}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"a constant with a similar name exists","code":null,"level":"help","spans":[{"file_name":"/Users/lennygonzales/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/netlink-packet-route-0.13.0/src/rtnl/constants.rs","byte_start":10700,"byte_end":10707,"line_start":270,"line_end":270,"column_start":32,"column_end":39,"is_primary":true,"text":[{"text":"pub const AF_CAIF: u16 = libc::AF_CAIF as u16;","highlight_start":32,"highlight_end":39}],"label":null,"suggested_replacement":"AF_COIP","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null},{"message":"consider importing this constant through its public re-export","code":null,"level":"help","spans":[{"file_name":"/Users/lennygonzales/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/netlink-packet-route-0.13.0/src/rtnl/constants.rs","byte_start":33,"byte_end":33,"line_start":3,"line_end":3,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"pub use netlink_packet_core::constants::*;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use crate::AF_CAIF;\n","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null},{"message":"if you import `AF_CAIF`, refer to it directly","code":null,"level":"help","spans":[{"file_name":"/Users/lennygonzales/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/netlink-packet-route-0.13.0/src/rtnl/constants.rs","byte_start":10694,"byte_end":10700,"line_start":270,"line_end":270,"column_start":26,"column_end":32,"is_primary":true,"text":[{"text":"pub const AF_CAIF: u16 = libc::AF_CAIF as u16;","highlight_start":26,"highlight_end":32}],"label":null,"suggested_replacement":"","suggestion_applicability":"Unspecified","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `AF_CAIF` in crate `libc`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/lennygonzales/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/netlink-packet-route-0.13.0/src/rtnl/constants.rs:270:32\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m270\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const AF_CAIF: u16 = libc::AF_CAIF as u16;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/lennygonzales/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.172/src/unix/bsd/apple/mod.rs:4234:1\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m4234\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const AF_COIP: c_int = 20;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12msimilarly named constant `AF_COIP` defined here\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: a constant with a similar name exists\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m270\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0mpub const AF_CAIF: u16 = libc::\u001b[0m\u001b[0m\u001b[38;5;9mAF_CAIF\u001b[0m\u001b[0m as u16;\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m270\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0mpub const AF_CAIF: u16 = libc::\u001b[0m\u001b[0m\u001b[38;5;10mAF_COIP\u001b[0m\u001b[0m as u16;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: consider importing this constant through its public re-export\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[38;5;10m+ use crate::AF_CAIF;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: if you import `AF_CAIF`, refer to it directly\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m270\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0mpub const AF_CAIF: u16 = \u001b[0m\u001b[0m\u001b[38;5;9mlibc::\u001b[0m\u001b[0mAF_CAIF as u16;\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m270\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0mpub const AF_CAIF: u16 = AF_CAIF as u16;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"cannot find value `AF_ALG` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/lennygonzales/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.172/src/unix/bsd/apple/mod.rs","byte_start":150536,"byte_end":150559,"line_start":4227,"line_end":4227,"column_start":1,"column_end":24,"is_primary":false,"text":[{"text":"pub const AF_DLI: c_int = 13;","highlight_start":1,"highlight_end":24}],"label":"similarly named constant `AF_DLI` defined here","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/lennygonzales/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/netlink-packet-route-0.13.0/src/rtnl/constants.rs","byte_start":10746,"byte_end":10752,"line_start":271,"line_end":271,"column_start":31,"column_end":37,"is_primary":true,"text":[{"text":"pub const AF_ALG: u16 = libc::AF_ALG as u16;","highlight_start":31,"highlight_end":37}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"a constant with a similar name exists","code":null,"level":"help","spans":[{"file_name":"/Users/lennygonzales/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/netlink-packet-route-0.13.0/src/rtnl/constants.rs","byte_start":10746,"byte_end":10752,"line_start":271,"line_end":271,"column_start":31,"column_end":37,"is_primary":true,"text":[{"text":"pub const AF_ALG: u16 = libc::AF_ALG as u16;","highlight_start":31,"highlight_end":37}],"label":null,"suggested_replacement":"AF_DLI","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null},{"message":"consider importing this constant through its public re-export","code":null,"level":"help","spans":[{"file_name":"/Users/lennygonzales/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/netlink-packet-route-0.13.0/src/rtnl/constants.rs","byte_start":33,"byte_end":33,"line_start":3,"line_end":3,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"pub use netlink_packet_core::constants::*;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use crate::AF_ALG;\n","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null},{"message":"if you import `AF_ALG`, refer to it directly","code":null,"level":"help","spans":[{"file_name":"/Users/lennygonzales/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/netlink-packet-route-0.13.0/src/rtnl/constants.rs","byte_start":10740,"byte_end":10746,"line_start":271,"line_end":271,"column_start":25,"column_end":31,"is_primary":true,"text":[{"text":"pub const AF_ALG: u16 = libc::AF_ALG as u16;","highlight_start":25,"highlight_end":31}],"label":null,"suggested_replacement":"","suggestion_applicability":"Unspecified","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `AF_ALG` in crate `libc`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/lennygonzales/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/netlink-packet-route-0.13.0/src/rtnl/constants.rs:271:31\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m271\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const AF_ALG: u16 = libc::AF_ALG as u16;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                               \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/lennygonzales/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.172/src/unix/bsd/apple/mod.rs:4227:1\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m4227\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const AF_DLI: c_int = 13;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-----------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12msimilarly named constant `AF_DLI` defined here\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: a constant with a similar name exists\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m271\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0mpub const AF_ALG: u16 = libc::\u001b[0m\u001b[0m\u001b[38;5;9mAF_ALG\u001b[0m\u001b[0m as u16;\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m271\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0mpub const AF_ALG: u16 = libc::\u001b[0m\u001b[0m\u001b[38;5;10mAF_DLI\u001b[0m\u001b[0m as u16;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: consider importing this constant through its public re-export\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[38;5;10m+ use crate::AF_ALG;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: if you import `AF_ALG`, refer to it directly\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m271\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0mpub const AF_ALG: u16 = \u001b[0m\u001b[0m\u001b[38;5;9mlibc::\u001b[0m\u001b[0mAF_ALG as u16;\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m271\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0mpub const AF_ALG: u16 = AF_ALG as u16;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"cannot find value `IFF_LOWER_UP` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/lennygonzales/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/netlink-packet-route-0.13.0/src/rtnl/constants.rs","byte_start":23900,"byte_end":23912,"line_start":632,"line_end":632,"column_start":37,"column_end":49,"is_primary":true,"text":[{"text":"pub const IFF_LOWER_UP: u32 = libc::IFF_LOWER_UP as u32;","highlight_start":37,"highlight_end":49}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider importing this constant through its public re-export","code":null,"level":"help","spans":[{"file_name":"/Users/lennygonzales/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/netlink-packet-route-0.13.0/src/rtnl/constants.rs","byte_start":33,"byte_end":33,"line_start":3,"line_end":3,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"pub use netlink_packet_core::constants::*;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use crate::IFF_LOWER_UP;\n","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null},{"message":"if you import `IFF_LOWER_UP`, refer to it directly","code":null,"level":"help","spans":[{"file_name":"/Users/lennygonzales/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/netlink-packet-route-0.13.0/src/rtnl/constants.rs","byte_start":23894,"byte_end":23900,"line_start":632,"line_end":632,"column_start":31,"column_end":37,"is_primary":true,"text":[{"text":"pub const IFF_LOWER_UP: u32 = libc::IFF_LOWER_UP as u32;","highlight_start":31,"highlight_end":37}],"label":null,"suggested_replacement":"","suggestion_applicability":"Unspecified","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `IFF_LOWER_UP` in crate `libc`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/lennygonzales/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/netlink-packet-route-0.13.0/src/rtnl/constants.rs:632:37\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m632\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const IFF_LOWER_UP: u32 = libc::IFF_LOWER_UP as u32;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: consider importing this constant through its public re-export\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[38;5;10m+ use crate::IFF_LOWER_UP;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: if you import `IFF_LOWER_UP`, refer to it directly\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m632\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0mpub const IFF_LOWER_UP: u32 = \u001b[0m\u001b[0m\u001b[38;5;9mlibc::\u001b[0m\u001b[0mIFF_LOWER_UP as u32;\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m632\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0mpub const IFF_LOWER_UP: u32 = IFF_LOWER_UP as u32;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"cannot find value `IFF_DORMANT` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/lennygonzales/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/netlink-packet-route-0.13.0/src/rtnl/constants.rs","byte_start":23987,"byte_end":23998,"line_start":634,"line_end":634,"column_start":36,"column_end":47,"is_primary":true,"text":[{"text":"pub const IFF_DORMANT: u32 = libc::IFF_DORMANT as u32;","highlight_start":36,"highlight_end":47}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider importing this constant through its public re-export","code":null,"level":"help","spans":[{"file_name":"/Users/lennygonzales/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/netlink-packet-route-0.13.0/src/rtnl/constants.rs","byte_start":33,"byte_end":33,"line_start":3,"line_end":3,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"pub use netlink_packet_core::constants::*;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use crate::IFF_DORMANT;\n","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null},{"message":"if you import `IFF_DORMANT`, refer to it directly","code":null,"level":"help","spans":[{"file_name":"/Users/lennygonzales/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/netlink-packet-route-0.13.0/src/rtnl/constants.rs","byte_start":23981,"byte_end":23987,"line_start":634,"line_end":634,"column_start":30,"column_end":36,"is_primary":true,"text":[{"text":"pub const IFF_DORMANT: u32 = libc::IFF_DORMANT as u32;","highlight_start":30,"highlight_end":36}],"label":null,"suggested_replacement":"","suggestion_applicability":"Unspecified","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `IFF_DORMANT` in crate `libc`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/lennygonzales/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/netlink-packet-route-0.13.0/src/rtnl/constants.rs:634:36\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m634\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const IFF_DORMANT: u32 = libc::IFF_DORMANT as u32;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: consider importing this constant through its public re-export\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[38;5;10m+ use crate::IFF_DORMANT;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: if you import `IFF_DORMANT`, refer to it directly\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m634\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0mpub const IFF_DORMANT: u32 = \u001b[0m\u001b[0m\u001b[38;5;9mlibc::\u001b[0m\u001b[0mIFF_DORMANT as u32;\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m634\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0mpub const IFF_DORMANT: u32 = IFF_DORMANT as u32;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"cannot find value `IFF_MASTER` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/lennygonzales/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/netlink-packet-route-0.13.0/src/rtnl/constants.rs","byte_start":24795,"byte_end":24805,"line_start":652,"line_end":652,"column_start":35,"column_end":45,"is_primary":true,"text":[{"text":"pub const IFF_MASTER: u32 = libc::IFF_MASTER as u32;","highlight_start":35,"highlight_end":45}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider importing this constant through its public re-export","code":null,"level":"help","spans":[{"file_name":"/Users/lennygonzales/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/netlink-packet-route-0.13.0/src/rtnl/constants.rs","byte_start":33,"byte_end":33,"line_start":3,"line_end":3,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"pub use netlink_packet_core::constants::*;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use crate::IFF_MASTER;\n","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null},{"message":"if you import `IFF_MASTER`, refer to it directly","code":null,"level":"help","spans":[{"file_name":"/Users/lennygonzales/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/netlink-packet-route-0.13.0/src/rtnl/constants.rs","byte_start":24789,"byte_end":24795,"line_start":652,"line_end":652,"column_start":29,"column_end":35,"is_primary":true,"text":[{"text":"pub const IFF_MASTER: u32 = libc::IFF_MASTER as u32;","highlight_start":29,"highlight_end":35}],"label":null,"suggested_replacement":"","suggestion_applicability":"Unspecified","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `IFF_MASTER` in crate `libc`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/lennygonzales/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/netlink-packet-route-0.13.0/src/rtnl/constants.rs:652:35\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m652\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const IFF_MASTER: u32 = libc::IFF_MASTER as u32;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: consider importing this constant through its public re-export\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[38;5;10m+ use crate::IFF_MASTER;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: if you import `IFF_MASTER`, refer to it directly\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m652\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0mpub const IFF_MASTER: u32 = \u001b[0m\u001b[0m\u001b[38;5;9mlibc::\u001b[0m\u001b[0mIFF_MASTER as u32;\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m652\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0mpub const IFF_MASTER: u32 = IFF_MASTER as u32;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"cannot find value `IFF_SLAVE` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/lennygonzales/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/netlink-packet-route-0.13.0/src/rtnl/constants.rs","byte_start":24876,"byte_end":24885,"line_start":654,"line_end":654,"column_start":34,"column_end":43,"is_primary":true,"text":[{"text":"pub const IFF_SLAVE: u32 = libc::IFF_SLAVE as u32;","highlight_start":34,"highlight_end":43}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider importing this constant through its public re-export","code":null,"level":"help","spans":[{"file_name":"/Users/lennygonzales/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/netlink-packet-route-0.13.0/src/rtnl/constants.rs","byte_start":33,"byte_end":33,"line_start":3,"line_end":3,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"pub use netlink_packet_core::constants::*;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use crate::IFF_SLAVE;\n","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null},{"message":"if you import `IFF_SLAVE`, refer to it directly","code":null,"level":"help","spans":[{"file_name":"/Users/lennygonzales/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/netlink-packet-route-0.13.0/src/rtnl/constants.rs","byte_start":24870,"byte_end":24876,"line_start":654,"line_end":654,"column_start":28,"column_end":34,"is_primary":true,"text":[{"text":"pub const IFF_SLAVE: u32 = libc::IFF_SLAVE as u32;","highlight_start":28,"highlight_end":34}],"label":null,"suggested_replacement":"","suggestion_applicability":"Unspecified","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `IFF_SLAVE` in crate `libc`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/lennygonzales/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/netlink-packet-route-0.13.0/src/rtnl/constants.rs:654:34\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m654\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const IFF_SLAVE: u32 = libc::IFF_SLAVE as u32;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: consider importing this constant through its public re-export\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[38;5;10m+ use crate::IFF_SLAVE;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: if you import `IFF_SLAVE`, refer to it directly\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m654\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0mpub const IFF_SLAVE: u32 = \u001b[0m\u001b[0m\u001b[38;5;9mlibc::\u001b[0m\u001b[0mIFF_SLAVE as u32;\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m654\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0mpub const IFF_SLAVE: u32 = IFF_SLAVE as u32;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"cannot find value `IFF_PORTSEL` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/lennygonzales/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/netlink-packet-route-0.13.0/src/rtnl/constants.rs","byte_start":24993,"byte_end":25004,"line_start":656,"line_end":656,"column_start":36,"column_end":47,"is_primary":true,"text":[{"text":"pub const IFF_PORTSEL: u32 = libc::IFF_PORTSEL as u32;","highlight_start":36,"highlight_end":47}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider importing this constant through its public re-export","code":null,"level":"help","spans":[{"file_name":"/Users/lennygonzales/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/netlink-packet-route-0.13.0/src/rtnl/constants.rs","byte_start":33,"byte_end":33,"line_start":3,"line_end":3,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"pub use netlink_packet_core::constants::*;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use crate::IFF_PORTSEL;\n","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null},{"message":"if you import `IFF_PORTSEL`, refer to it directly","code":null,"level":"help","spans":[{"file_name":"/Users/lennygonzales/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/netlink-packet-route-0.13.0/src/rtnl/constants.rs","byte_start":24987,"byte_end":24993,"line_start":656,"line_end":656,"column_start":30,"column_end":36,"is_primary":true,"text":[{"text":"pub const IFF_PORTSEL: u32 = libc::IFF_PORTSEL as u32;","highlight_start":30,"highlight_end":36}],"label":null,"suggested_replacement":"","suggestion_applicability":"Unspecified","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `IFF_PORTSEL` in crate `libc`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/lennygonzales/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/netlink-packet-route-0.13.0/src/rtnl/constants.rs:656:36\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m656\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const IFF_PORTSEL: u32 = libc::IFF_PORTSEL as u32;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: consider importing this constant through its public re-export\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[38;5;10m+ use crate::IFF_PORTSEL;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: if you import `IFF_PORTSEL`, refer to it directly\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m656\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0mpub const IFF_PORTSEL: u32 = \u001b[0m\u001b[0m\u001b[38;5;9mlibc::\u001b[0m\u001b[0mIFF_PORTSEL as u32;\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m656\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0mpub const IFF_PORTSEL: u32 = IFF_PORTSEL as u32;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"cannot find value `IFF_AUTOMEDIA` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/lennygonzales/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/netlink-packet-route-0.13.0/src/rtnl/constants.rs","byte_start":25117,"byte_end":25130,"line_start":658,"line_end":658,"column_start":38,"column_end":51,"is_primary":true,"text":[{"text":"pub const IFF_AUTOMEDIA: u32 = libc::IFF_AUTOMEDIA as u32;","highlight_start":38,"highlight_end":51}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider importing this constant through its public re-export","code":null,"level":"help","spans":[{"file_name":"/Users/lennygonzales/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/netlink-packet-route-0.13.0/src/rtnl/constants.rs","byte_start":33,"byte_end":33,"line_start":3,"line_end":3,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"pub use netlink_packet_core::constants::*;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use crate::IFF_AUTOMEDIA;\n","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null},{"message":"if you import `IFF_AUTOMEDIA`, refer to it directly","code":null,"level":"help","spans":[{"file_name":"/Users/lennygonzales/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/netlink-packet-route-0.13.0/src/rtnl/constants.rs","byte_start":25111,"byte_end":25117,"line_start":658,"line_end":658,"column_start":32,"column_end":38,"is_primary":true,"text":[{"text":"pub const IFF_AUTOMEDIA: u32 = libc::IFF_AUTOMEDIA as u32;","highlight_start":32,"highlight_end":38}],"label":null,"suggested_replacement":"","suggestion_applicability":"Unspecified","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `IFF_AUTOMEDIA` in crate `libc`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/lennygonzales/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/netlink-packet-route-0.13.0/src/rtnl/constants.rs:658:38\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m658\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const IFF_AUTOMEDIA: u32 = libc::IFF_AUTOMEDIA as u32;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: consider importing this constant through its public re-export\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[38;5;10m+ use crate::IFF_AUTOMEDIA;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: if you import `IFF_AUTOMEDIA`, refer to it directly\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m658\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0mpub const IFF_AUTOMEDIA: u32 = \u001b[0m\u001b[0m\u001b[38;5;9mlibc::\u001b[0m\u001b[0mIFF_AUTOMEDIA as u32;\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m658\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0mpub const IFF_AUTOMEDIA: u32 = IFF_AUTOMEDIA as u32;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"aborting due to 34 previous errors","code":null,"level":"error","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: aborting due to 34 previous errors\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"For more information about this error, try `rustc --explain E0425`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1mFor more information about this error, try `rustc --explain E0425`.\u001b[0m\n"}
